{"version":3,"sources":["Components/Hero/Hero.jsx","Components/DateFilter/DateFilter.jsx","Components/OptionsFilter/OptionsFilter.jsx","Components/Filters/Filters.jsx","Components/Loading/Loading.jsx","Components/Hotel/Hotel.jsx","Components/NoResults/NoResults.jsx","Components/CardHotel/CardHotel.jsx","Components/Application/Application.jsx","App.js","serviceWorker.js","index.js"],"names":["Hero","props","UpdateDate","bind","updatePrice","date","pMes","fecha","Moment","diaSemana","clone","day","dia","format","mes","month","year","price","priceString","dateTo","this","filters","dateFrom","className","countHotels","country","rooms","React","Component","DateFilter","handleDateChange","event","onDateChange","type","onChange","name","value","icon","OptionsFilter","handleOptionChange","onOptionChange","Options","options","map","option","key","toString","style","width","selected","Filters","payload","target","onFilterChange","justifyContent","Loading","marginTop","max","Hotel","handleSubmit","preventDefault","alert","Hotels","hotel","slug","src","photo","alt","onError","e","description","city","Array","fill","index","margin","onClick","NoResults","CardHotel","length","Application","requestApi","a","fetch","state","ApiUrl","response","json","setState","hotels","filteredHotels","isAllLoaded","console","log","process","handleFilterChange","FilterBy","newFilteredHotels","filter","availabilityFrom","availabilityTo","parseInt","hotelsFiltered","CountHotels","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.50bbe4e2.chunk.js","sourcesContent":["import React from 'react';\r\nimport Moment from \"moment\";\r\n\r\nclass Hero extends React.Component{\r\n constructor(props){\r\n   super(props);\r\n   this.UpdateDate = this.UpdateDate.bind(this);\r\n   this.updatePrice = this.updatePrice.bind(this);\r\n }\r\n//Obtenemos la Fecha de Cotizacion\r\n UpdateDate(date) {\r\n\r\n      // Obtenemos la fecha actual, dia de la semana, dia del mes, mes y año;\r\n      const fecha = Moment(date),\r\n        diaSemana = fecha.clone().day(),\r\n        dia = fecha.clone().format('DD'),\r\n        mes = fecha.clone().month(),\r\n        year = fecha.clone().year()\r\n\r\n      let pDiaSemana = \"\",\r\n          pMes = \"\"\r\n\r\n      // Obtenemos el dia se la semana y lo mostramos\r\n      const semana = ['Domingo', 'Lunes', 'Martes', 'Miercoles', 'Jueves', 'Viernes', 'Sabado'];\r\n      pDiaSemana = semana[diaSemana];\r\n    \r\n      // Obtenemos el Mes y año y lo mostramos\r\n      const meses = ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre']\r\n      pMes = meses[mes];\r\n\r\n      return(\r\n        ` ${pDiaSemana}, ${dia} de ${pMes} de ${year} `\r\n      );\r\n \r\n    };\r\n//Obtenemos el simbolo del price\r\n    updatePrice(price){\r\n      let priceString = \"\"\r\n      switch (price) {\r\n        case \"1\":\r\n            priceString = \"$\"\r\n          break;\r\n          case \"2\":\r\n            priceString = \"$$\"\r\n          break;\r\n          case \"3\":\r\n            priceString = \"$$$\"\r\n          break;\r\n          case \"4\":\r\n            priceString = \"$$$$\"\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      return priceString;\r\n    }\r\n\r\n  render(){\r\n    const dateTo = this.UpdateDate(this.props.filters.dateTo);\r\n    const dateFrom = this.UpdateDate(this.props.filters.dateFrom);\r\n    return(\r\n        <section className=\"hero is-primary\">\r\n        <div className=\"hero-body\">\r\n          <div className=\"container\">\r\n            <h1 className=\"title\">Hoteles</h1>\r\n            <h2 className=\"subtitle\">\r\n              <p>Tenemos disponibles {this.props.countHotels} hoteles en total.</p>\r\n                <span> \r\n              {this.props.filters.dateFrom !== \"\" && (\r\n                  <span>desde el\r\n                  <strong>{ dateFrom }</strong> \r\n                  </span> \r\n              ) \r\n              }\r\n\r\n              {this.props.filters.dateTo !== \"\" &&(\r\n                <span>\r\n                  hasta el \r\n                  <strong> {dateTo} </strong> \r\n                </span>\r\n              )\r\n              }\r\n\r\n              {this.props.filters.country !== \"\" &&(\r\n                <span>\r\n                  { ` en ${this.props.filters.country}`}\r\n                </span>\r\n              )\r\n              }\r\n\r\n              {this.props.filters.price !== \"\" &&(\r\n                <span>\r\n                  { ` en ${this.updatePrice(this.props.filters.price)}`}\r\n                </span>\r\n              )\r\n              }\r\n\r\n              {this.props.filters.rooms !== \"\" &&(\r\n                <span>\r\n                  { ` de hasta ${this.props.filters.rooms} personas`}\r\n                </span>\r\n              )\r\n              }\r\n\r\n                </span>\r\n            </h2>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Hero;","import React from 'react';\r\n\r\nclass DateFilter extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleDateChange = this.handleDateChange.bind(this);\r\n      }\r\n    \r\n      handleDateChange(event) {\r\n        this.props.onDateChange(event)\r\n      }\r\n\r\n    render() { \r\n        return(\r\n            <div className=\"field\">\r\n                <div className=\"control has-icons-left\">\r\n                    <input className=\"input\" type=\"date\" onChange={this.handleDateChange} name={this.props.name} value={ this.props.date }/>\r\n                    <span className=\"icon is-small is-left\">\r\n                        <i className=\"fas\">{this.props.icon}</i>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default DateFilter;","import React from 'react';\r\n\r\n\r\nclass OptionsFilter extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleOptionChange = this.handleOptionChange.bind(this);\r\n      }\r\n    \r\n      handleOptionChange(event) {\r\n        this.props.onOptionChange(event)\r\n      }\r\n\r\n    render() {\r\n        const optionsArray = this.props.options;\r\n        const Options = optionsArray.map((option) =>\r\n            <option key={option.name.toString()} name={option.name.toString()} value={option.value}>{option.name}</option>\r\n        );\r\n\r\n        return(\r\n            <div className=\"field\">\r\n                <div className=\"control has-icons-left\">\r\n                    <div className=\"select\" style={ {width: '100%'} }>\r\n                    <select style={ {width: '100%'} } onChange={ this.handleOptionChange } name={this.props.name} value={ this.props.selected }>\r\n                        {Options}\r\n                    </select>\r\n                    </div>\r\n                    <div className=\"icon is-small is-left\">\r\n                        <i className=\"fas\">{this.props.icon}</i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OptionsFilter;","import React from 'react';\r\nimport DateFilter from './../DateFilter/DateFilter.jsx';\r\nimport OptionsFilter from './../OptionsFilter/OptionsFilter.jsx';\r\n\r\n\r\nclass Filters extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleOptionChange = this.handleOptionChange.bind(this)\r\n    }\r\n\r\n      handleOptionChange(event) {\r\n        let payload = this.props.filters\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        payload[name] = value\r\n\r\n        this.props.onFilterChange(payload)\r\n      }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <nav className=\"navbar is-info\" style={ {justifyContent: 'center'} }>\r\n                <div className=\"navbar-item\">\r\n                    <DateFilter\r\n                    date={ this.props.filters.dateFrom}\r\n                    icon=\"sign-in-alt\" \r\n                    onDateChange={this.handleOptionChange}\r\n                    name=\"dateFrom\"/>\r\n                </div>\r\n                <div className=\"navbar-item\">\r\n                    <DateFilter\r\n                    date={ this.props.filters.dateTo }\r\n                    icon=\"sign-out-alt\" \r\n                    onDateChange={this.handleOptionChange}\r\n                    name=\"dateTo\"/>\r\n                </div>\r\n                <div className=\"navbar-item\">\r\n                    <OptionsFilter\r\n                    options={ [ {value: \"\", name: 'Todos los países'}, {value: 'Argentina', name: 'Argentina'}, {value: 'Brasil', name: 'Brasil'}, {value: 'Chile', name: 'Chile'}, {value: 'Uruguay', name: 'Uruguay'} ] }\r\n                    selected={ this.props.filters.country }\r\n                    icon=\"globe\" \r\n                    onOptionChange={this.handleOptionChange} \r\n                    name=\"country\"/>\r\n                </div>\r\n                <div className=\"navbar-item\">\r\n                    <OptionsFilter\r\n                    options={ [ {value: \"\", name: 'Cualquier precio'}, {value: 1, name: '$'}, {value: 2, name: '$$'}, {value: 3, name: '$$$'}, {value: 4, name: '$$$$'} ] }\r\n                    selected={ this.props.filters.price }\r\n                    icon=\"dollar-sign\"\r\n                    onOptionChange={this.handleOptionChange}\r\n                    name=\"price\"/>\r\n                </div>\r\n                <div className=\"navbar-item\">\r\n                    <OptionsFilter\r\n                    options={ [ {value: \"\", name: 'Cualquier tamaño'}, {value: 10, name: 'Hotel pequeño'}, {value: 20, name: 'Hotel mediano'}, {value: 30, name: 'Hotel grande'} ] }\r\n                    selected={ this.props.filters.rooms }\r\n                    icon=\"bed\" \r\n                    onOptionChange={this.handleOptionChange}\r\n                    name=\"rooms\"/>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Filters;","import React from 'react';\r\n\r\nfunction Loading() {\r\n    return(\r\n        <>\r\n            <section className=\"section\" style={ {marginTop: '3em'} }>\r\n                <div className=\"container\">\r\n                    <progress className=\"progress is-small is-primary\" max=\"100\">15%</progress>\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Loading;","import React from 'react';\r\n\r\nclass Hotel extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        alert(\"Esta Funcionalidad no ha sido programada ;)\");\r\n    }\r\n\r\n    render(){\r\n        const Hotels = this.props.Hotels;\r\n        const Hotel = Hotels.map((hotel) =>{\r\n            return(\r\n                <div key={hotel.slug.toString()} className=\"column is-one-third\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-image\">\r\n                            <figure className=\"image is-4by3\">\r\n                            <img src={hotel.photo} alt={hotel.name} onError={(e) => {e.target.src = 'https://www.e-tsw.com/_lib/KResponsive/img/et_broken_link_hotel.png'; e.target.onError = null;}}/>\r\n                            </figure>\r\n                        </div>\r\n                        <div className=\"card-content\">\r\n                            <p className=\"title is-4\">{hotel.name}</p>\r\n                            <p>{hotel.description}</p>\r\n                            <div className=\"field is-grouped is-grouped-multiline\" style={{marginTop: '1em'}}>\r\n                            <div className=\"control\">\r\n                                <div className=\"tags has-addons\">\r\n                                <span className=\"tag is-medium is-info\"><i className=\"fas fa-map-marker\"></i></span>\r\n                                <span className=\"tag is-medium\">{hotel.city}, {hotel.country}</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"control\">\r\n                                <div className=\"tags has-addons\">\r\n                                <span className=\"tag is-medium is-info\"><i className=\"fas fa-bed\"></i></span>\r\n                                <span className=\"tag is-medium\">{hotel.rooms} Habitaciones</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"control\">\r\n                                <div className=\"tags\">\r\n                                <span className=\"tag is-medium is-info\">\r\n                                    {Array(hotel.price)\r\n                                    .fill(null)\r\n                                    .map((value, index) => (\r\n                                        <i key={index.toString()} className=\"fas fa-dollar-sign\" style={{margin: '0 .125em' }}></i>\r\n                                    ))}\r\n\r\n                                </span>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-footer\">\r\n                            <button onClick={this.handleSubmit} type=\"submit\" className=\"button is-primary card-footer-item has-background-primary has-text-white has-text-weight-bold\">Reservar</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n        return (\r\n            <>\r\n                {Hotel}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Hotel","import React from 'react';\r\n\r\nfunction NoResults(){\r\n        return(\r\n            <article className=\"message is-warning\">\r\n                <div className=\"message-body\">\r\n                    No se han encontrado hoteles que coincidan con los parámetros de búsqueda.\r\n                </div>\r\n            </article>\r\n        )\r\n}\r\n\r\nexport default NoResults;","import React from 'react';\r\nimport Hotel from './../Hotel/Hotel.jsx';\r\nimport NoResults from './../NoResults/NoResults.jsx';\r\n\r\nfunction CardHotel(props){\r\n        const Hotels = props.Hotels;\r\n        return(\r\n            <section className=\"section\" style={ {marginTop: '3em'} }>\r\n            <div className=\"container\">\r\n                <div className=\"columns is-multiline\">\r\n                    {   \r\n                        Hotels.length > 0 ? (\r\n                        <Hotel Hotels={Hotels}/>\r\n                        ) : (\r\n                        <NoResults/>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n            </section>\r\n        )\r\n}\r\n\r\nexport default CardHotel;","import React from 'react';\r\nimport Moment from \"moment\";\r\nimport Hero from './../Hero/Hero.jsx';\r\nimport Filters from './../Filters/Filters.jsx';\r\nimport Loading from './../Loading/Loading.jsx';\r\nimport CardHotel from './../CardHotel/CardHotel.jsx';\r\n\r\n\r\nclass Application extends React.Component{\r\nconstructor(props){\r\n    super(props);\r\n    this.state = {\r\n        ApiUrl: process.env.REACT_APP_API_URL,\r\n        filters:{\r\n            dateFrom: \"\",\r\n            dateTo: \"\",\r\n            country: \"\",\r\n            price: \"\",\r\n            rooms: \"\"\r\n        },\r\n        hotels: [],\r\n        filteredHotels: [],\r\n        isAllLoaded: false\r\n    };\r\n    this.handleFilterChange = this.handleFilterChange.bind(this);\r\n    this.FilterBy = this.FilterBy.bind(this);\r\n    this.requestApi = this.requestApi.bind(this);\r\n};\r\n\r\n// Llamada a la Api de Acamica\r\ncomponentDidMount(){\r\n  //Llamada a la Api de Acamica\r\n  this.requestApi();\r\n}\r\n\r\n//Llamada a la Api de Acamica\r\nrequestApi = async () => {\r\n  try {\r\n    const response = await fetch(this.state.ApiUrl);\r\n    const json = await response.json();\r\n\r\n    this.setState({\r\n      hotels: json,\r\n      filteredHotels: json,\r\n      isAllLoaded: true\r\n    });\r\n\r\n  } catch (error) {\r\n    console.log('Error en la petición...', error)\r\n  }\r\n}\r\n\r\n//actualizamos los Filtros en el state\r\nhandleFilterChange(payload) {\r\n    const newFilteredHotels = this.FilterBy(payload,this.state.hotels);\r\n    this.setState({\r\n      filters: payload,\r\n      filteredHotels: newFilteredHotels\r\n    });\r\n}\r\n// Realizamos el Filtrado de los hoteles con los valores que seteamos en el state de filtros\r\n FilterBy(filters, hotels) {\r\n    return hotels.filter(hotel => {\r\n      return (Moment(hotel.availabilityFrom).format(\"YYYY-MM-DD\") >= (filters.dateFrom !== \"\" ? filters.dateFrom : Moment(hotel.availabilityFrom).format(\"YYYY-MM-DD\"))) &&\r\n             (Moment(hotel.availabilityTo).format(\"YYYY-MM-DD\") <= (filters.dateTo !== \"\" ? filters.dateTo : Moment(hotel.availabilityTo).format(\"YYYY-MM-DD\"))) &&\r\n             (hotel.country === (filters.country !== \"\" ?  filters.country : hotel.country)) &&\r\n             (hotel.price === (filters.price !== \"\" ?  parseInt(filters.price) : hotel.price)) &&\r\n             (hotel.rooms <= (filters.rooms !== \"\" ?  parseInt(filters.rooms) : hotel.rooms))\r\n    });\r\n  }\r\n  //renderizamos todo el componente\r\n    render() {\r\n        const hotelsFiltered = this.state.filteredHotels;\r\n        const CountHotels = hotelsFiltered.length;\r\n        return(\r\n            <>\r\n              <Hero filters={ this.state.filters } countHotels={CountHotels} />\r\n              <Filters filters={ this.state.filters } onFilterChange={ this.handleFilterChange }/>\r\n              { this.state.isAllLoaded ? (\r\n                <CardHotel Hotels={hotelsFiltered}/>\r\n              ) : (\r\n                <Loading />\r\n              )\r\n              }\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Application;","import React from 'react';\nimport 'bulma/css/bulma.css';\nimport Application from './Components/Application/Application.jsx';\n\nfunction App() {\n  return (\n    <>\n      <Application/>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}